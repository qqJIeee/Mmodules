from asyncio import sleep
from .. import loader, utils
import asyncio
from telethon.tl.types import Message, ChatAdminRights
from telethon import functions
import inspect
from ..inline.types import InlineCall


@loader.tds
class mattk(loader.Module):
    '''–ú–æ–¥—É–ª—å –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –∞—Ç–∞–∫–∏ –±–æ—Å—Å–æ–≤ –≤ –±–æ—Ç–µ MineEvo'''
    strings = {
        "name" : "mattk"
    }

    async def client_ready(self,client, db):
        self.client = client
        self.hmtk = False
        self.tttk = False

        s = self.get('dly')
        if s == None:
            self.set('dly', 1.0)

        s = self.get('autk')
        if s == None:
            self.set("autk", False)
    @loader.command()
    async def attk(self,message):
        '''–í–∫–ª/–≤—ã–∫–ª –∞–≤—Ç–æ–∞—Ç–∞–∫—É'''
        self.set('autk', not self.get('autk'))
        if self.get('autk'):
            await utils.answer(message, "<b><emoji document_id=5463277406435422003>üó°</emoji> –ê–≤—Ç–æ–∞—Ç–∞–∫–∞ –≤–∫–ª—é—á–µ–Ω–∞</b>")
        else:
            await utils.answer(message, "<b><emoji document_id=5463277406435422003>üó°</emoji> –ê–≤—Ç–æ–∞—Ç–∞–∫–∞ –≤—ã–∫–ª—é—á–µ–Ω–æ</b>")

    @loader.command(alias='asd')
    async def asdly(self,message):
        ''' - –ó–∞–¥–µ—Ä–∂–∫–∞ –∞—Ç–∞–∫–∏\n[–í—Ä–µ–º—è]'''
        args = utils.get_args_raw(message)
        cmd = f'{utils.escape_html(self.get_prefix())}{inspect.currentframe().f_code.co_name}'
        if args:
            cmd = f'{utils.escape_html(self.get_prefix())}{inspect.currentframe().f_code.co_name} {utils.get_args_raw(message)}'
        try:
            args = float(args)
            self.set('dly', args)
            await utils.answer(message, f"<emoji document_id=5332533929020761310>‚úÖ</emoji><b>–£—Å–ø–µ—à–Ω–æ!\n–ó–∞–¥–µ—Ä–∂–∫–∞ –∞—Ç–∞–∫–∏ –∏–∑–º–µ–Ω–µ–Ω–∞ –Ω–∞ {args}</b> ")
        except ValueError:
            await utils.answer(message, f"<emoji document_id=5240241223632954241>üö´</emoji><b> –û—à–∏–±–∫–∞ | <code>{cmd}</code>\n–£–∫–∞–∂–∏—Ç–µ —á–∏—Å–ª–æ –≤ –∑–Ω–∞—á–µ–Ω–∏–∏!</b>")

    @loader.watcher()
    async def watcher(self,message):
        dly = self.get('dly', None)
        if message.chat_id == 5522271758 and "üî∂ –¢—ã –≤—ã–±—Ä–∞–ª –±–æ—Å—Å–∞" in message.raw_text:
            if self.get('autk'):
                self.tttk = True
                if not self.hmtk:
                    self.hmtk = True
                    if self.get('autk'):
                        while self.tttk:
                            await self.client.send_message("@mine_evo_bot", "–ê—Ç–∫")
                            await asyncio.sleep(dly)
                        else:
                            self.hmtk = False   
        if message.chat_id == 5522271758 and "–¥–ª—è –∞—Ç–∞–∫–∏ –≤—ã–±–µ—Ä–∏ –±–æ—Å—Å–∞" in message.raw_text:
            self.tttk = False
    @loader.command()
    async def mainfo(self,message):
        '''- –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –º–æ–¥—É–ª—è mattk'''
        if self.get('autk'):
            aa = '–í–∫–ª—é—á–µ–Ω–∞'
        else:
            aa = '–í—ã–∫–ª—é—á–µ–Ω–∞'
        await self.inline.form(
            text=f"<emoji document_id=5981043230160981261>‚è±</emoji> <b>–ó–∞–¥–µ—Ä–∂–∫–∞ –∞—Ç–∞–∫–∏: </b><code>{self.get('dly')}</code>\n<b><emoji document_id=5463277406435422003>üó°</emoji> –°—Ç–∞—Ç—É—Å –∞—Ç–∞–∫–∏: </b><i>{aa}</i>",
            message=message,
            reply_markup=[
                [
                    {
                        'text' : 'üó° –í–∫–ª/–≤—ã–∫–ª –∞—Ç–∞–∫—É',
                        'callback' : self.matutk
                    },
                    {
                        'text' : '‚è± –ó–∞–¥–µ—Ä–∂–∫–∞ –∞—Ç–∞–∫–∏',
                        'callback' : self.mdlya
                    }
                ],
                [
                    {
                        'text' : "üîª –ó–∞–∫—Ä—ã—Ç—å",
                        'action' : 'close'
                    }
                ]
            ]
        )
    async def matutk(self,call:InlineCall):
        self.set('autk', not self.get('autk'))
        if self.get('autk'):
            aa = '–í–∫–ª—é—á–µ–Ω–∞'
        else:
            aa = '–í—ã–∫–ª—é—á–µ–Ω–∞'
        await call.edit(
            text=f"<emoji document_id=5981043230160981261>‚è±</emoji> <b>–ó–∞–¥–µ—Ä–∂–∫–∞ –∞—Ç–∞–∫–∏: </b><code>{self.get('dly')}</code>\n<b><emoji document_id=5463277406435422003>üó°</emoji> –°—Ç–∞—Ç—É—Å –∞—Ç–∞–∫–∏: </b><i>{aa}</i>",
            reply_markup=[
                [
                    {
                        'text' : 'üó° –í–∫–ª/–≤—ã–∫–ª –∞—Ç–∞–∫—É',
                        'callback' : self.matutk
                    },
                    {
                        'text' : '‚è± –ó–∞–¥–µ—Ä–∂–∫–∞ –∞—Ç–∞–∫–∏',
                        'callback' : self.mdlya
                    }
                ],
                [
                    {
                        'text' : "üîª –ó–∞–∫—Ä—ã—Ç—å",
                        'action' : 'close'
                    }
                ]
            ]
        )
    async def mdlya(self,call: InlineCall):
        if self.get('autk'):
            aa = '–í–∫–ª—é—á–µ–Ω–∞'
        else:
            aa = '–í—ã–∫–ª—é—á–µ–Ω–∞'
        await call.edit(
            text=f"<emoji document_id=5981043230160981261>‚è±</emoji> <b>–ó–∞–¥–µ—Ä–∂–∫–∞ –∞—Ç–∞–∫–∏: </b><code>{self.get('dly')}</code>\n<b><emoji document_id=5463277406435422003>üó°</emoji> –°—Ç–∞—Ç—É—Å –∞—Ç–∞–∫–∏: </b><i>{aa}</i>\n\n<i><emoji document_id=5452069934089641166>‚ùì</emoji> –ß—Ç–æ–±—ã –∏–∑–º–µ–Ω–∏—Ç—å –∑–∞–¥–µ—Ä–∂–∫—É –∞—Ç–∞–∫–∏ –Ω–∞–ø–∏—à–∏—Ç–µ:\n</i><code>.asdly [–∑–∞–¥–µ—Ä–∂–∫–∞]</code>",
            reply_markup=[
                [
                    {
                        'text' : 'üó° –í–∫–ª/–≤—ã–∫–ª –∞—Ç–∞–∫—É',
                        'callback' : self.matutk
                    },
                    {
                        'text' : '‚è± –ó–∞–¥–µ—Ä–∂–∫–∞ –∞—Ç–∞–∫–∏',
                        'callback' : self.mdlya
                    }
                ],
                [
                    {
                        'text' : "üîª –ó–∞–∫—Ä—ã—Ç—å",
                        'action' : 'close'
                    }
                ]
            ]
        )